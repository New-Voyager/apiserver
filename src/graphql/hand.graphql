scalar DateTime

enum WonAtStatus {
  PREFLOP
  FLOP
  TURN
  RIVER
  SHOW_DOWN
}

enum GameType {
  UNKNOWN
  HOLDEM
  OMAHA
  OMAHA_HILO
}

type HandHistory {
  pageId: Int
  handNum: Int!
  noWinners: Int!
  noLoWinners: Int
  gameType: GameType!
  wonAt: WonAtStatus!
  showDown: Boolean!
  playerCards: [Int],
  winningCards: String
  winningRank: Int
  loWinningCards: String
  loWinningRank: Int
  timeStarted: DateTime!
  timeEnded: DateTime!
  handTime: Int
  winners: Json
  totalPot: Float!
  data: Json
  summary: String
}

type HandWinners {
  pageId: Int
  gameId: Int!
  handNum: Int!
  isHigh: Boolean!
  winningCards: String
  winningRank: Int
  playerId: Int!
  pot: Float!
}

type StarredHands {
  playerId: Int!
  gameId: Int!
  handNum: Int!
  handHistory: HandHistory!
}

input PageInput {
  prev: Int
  next: Int
  count: Int
}

type Player {
  name: String
  uuid: String!
}

type Club {
  name: String
  clubCode: String! 
}

type Game {
  title: String
  gameCode: String!
}

type SavedHand {
  id: Int!
  sharedBy: Player
  savedBy: Player
  sharedTo: Club
  gameCode: String!
  handNum: Int!
  data: Json!
  updatedAt: DateTime!
}

type Mutation {
  saveStarredHand(
    gameCode: String!
    handNum: String!
  ): String!
  shareHand(gameCode: String!, handNum: Int!, clubCode: String!): Int!
  bookmarkHand(gameCode: String!, handNum: Int!): Int!
}

type Query {
  # To get the last hand history for a given gameId and clubId
  lastHandHistory(gameCode: String!): HandHistory!

  # To get specific hand history for a given gameId, clubId and handNum
  specificHandHistory(
    gameCode: String!
    handNum: String!
  ): HandHistory!

  # To get all hand history for a given gameId and clubId
  allHandHistory(
    gameCode: String!
    page: PageInput
  ): [HandHistory!]

  # To get a specific user's last 10 winning hands for a given gameId and clubId
  myWinningHands(
    gameCode: String!
    page: PageInput
  ): [HandHistory!]

  # To get all starred message for a user (default count 25)
  allStarredHands: [StarredHands!]

  sharedHand(id: Int!, clubCode: String!): SavedHand!
  sharedHands(clubCode: String!): [SavedHand!]
  bookmarkedHands: [SavedHand!]
}