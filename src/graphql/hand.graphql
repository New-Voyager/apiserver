scalar DateTime

enum WonAtStatus {
    PREFLOP,
    FLOP,
    TURN,
    RIVER,
    SHOWDOWN,
}
  
enum GameType {
    UNKNOWN,
    HOLDEM,
    OMAHA,
    OMAHA_HILO,
}

type HandHistory {
    pageId: Int
    clubId: Int!
    gameNum: Int!
    handNum: Int!
    gameType:  GameType!
    wonAt: WonAtStatus!
    showDown: Boolean!
    winningCards: String
    winningRank: Int
    loWinningCards: String
    loWinningRank: Int
    timeStarted: DateTime!
    timeEnded: DateTime!
    data: String!
    totalPot: Float!
}

type HandWinners {
    clubId: Int!
    gameNum: Int!
    handNum: Int!
    isHigh: Boolean!
    winningCards: String
    winningRank: Int
    playerId: Int!
    pot: Float!
}

input PageInput {
  prev: Int
  next: Int
  count: Int
}

type Query {
    lastHandHistory(clubId: Int!, gameNum: Int!): HandHistory!
    specificHandHistory(clubId: Int!, gameNum: Int!, handNum: Int!): HandHistory!
    allHandHistory(clubId: Int!, gameNum: Int!, page: PageInput): [HandHistory!]
}