enum RewardType {
  HIGH_HAND 
  BAD_BEAT 
  HEAD_HUNTING 
}

enum ScheduleType{
  ENTIRE_GAME, 
  HOURLY, 
  TWO_HOURS
}

input RewardInput {
  name: String!
  type: RewardType!
  amount: Float!
  schedule: ScheduleType!
  minRank: Int
  startHour: Int
  endHour: Int  
}

type Mutation {
  createReward(clubCode: String!, input: RewardInput!): Int!
}

type Reward {
  id: Int!
  name: String!
  type: RewardType!
  schedule: ScheduleType!
  amount: Float!
  minRank: Int
  startHour: Int
  endHour: Int  
}

type HighHand{
  gameCode: String!
  handNum: Int!
  playerUuid: String!
  playerName: String!
  playerCards: String!
  boardCards: String!
  highHand: String!
  rank: Int!
  handTime: DateTime!
  highHandCards: String!
}

type RewardTrack{
  id: Int!
}


type Query {
  rewards(clubCode: String!): [Reward!]
  highHandsByGame(gameCode: String!): [HighHand!]
  highHandsByReward(gameCode: String!, rewardId: String!): [HighHand!]
  highHandWinners(gameCode: String!, rewardId: String!): [HighHand!]
  getRewardTrack(gameCode: String!, rewardId: String!): [RewardTrack]
}