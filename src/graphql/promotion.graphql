enum PromotionType {
  HIGH_HAND,
  BAD_BEAT,
  SPECIFIC_CARDS
}

input CreatePromotionInput {
  promotionType: PromotionType
  cardRank: Int!
  bonus: Float!
}

type Promotion {
  id: Int!
  clubCode: String!
  promotionType: PromotionType
  cardRank: Int
  bonus: Float!
} 

type AssignedPromotions {
  promotionId: Int!
  clubCode: String!
  gameCode: String!
  promotionType: PromotionType
  cardRank: Int
  bonus: Float!
  startAt: DateTime
  endAt: DateTime
}

type Mutation {
  createPromotion(clubCode: String! input: CreatePromotionInput): Promotion
  assignPromotion(clubCode: String!, gameCode: String, promotionId: Int!, startAt: DateTime, endAt: DateTime): String
}


type Query {
  promotions(clubCode: String!): [Promotion!]
  assignedPromotions(clubCode: String!, gameCode: String!): [AssignedPromotions!]
}