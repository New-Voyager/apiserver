import {
  Entity,
  PrimaryGeneratedColumn,
  Column,
  Index,
  ManyToOne,
  JoinColumn,
} from 'typeorm';
import {Player} from './player';
import {Club} from './club';
import {PokerGame} from './game';
import {DbAwareColumn, DbAwareUpdateDateColumn} from './dbaware';
import {BuyInApprovalStatus, PlayerStatus} from './types';

@Entity({name: 'player_game_tracker'})
export class PlayerGameTracker {
  // NOTE:
  // SOMA: I added pgt_ prefix to avoid an ambigous column reference caused by the SQL generated by typeorm
  // "PlayerGameTracker"."player_id" AS "PlayerGameTracker_player_id",
  // "PlayerGameTracker_player"."id" AS "PlayerGameTracker_player_id"
  @Index('player-game-tracker-game-idx')
  @ManyToOne(() => PokerGame, game => game.id, {primary: true})
  @JoinColumn({name: 'pgt_game_id'})
  public game!: PokerGame;

  @Index('player-game-tracker-player-idx')
  @ManyToOne(() => Player, player => player.id, {primary: true, eager: false})
  @JoinColumn({name: 'pgt_player_id'})
  public player!: Player;

  // @Index('player-game-tracker-club-idx')
  // @ManyToOne(() => Club, club => club.id, {primary: true, nullable: true})
  // @JoinColumn({name: 'pgt_club_id'})
  // public club!: Club;

  @Column({name: 'buy_in', type: 'decimal'})
  public buyIn!: number;

  @Column({name: 'stack', type: 'decimal'})
  public stack!: number;

  @Column({name: 'status', nullable: false, type: 'int'})
  public status!: PlayerStatus;

  @Column({name: 'buyIn_status', nullable: true, type: 'int'})
  public buyInStatus!: BuyInApprovalStatus;

  @Column({name: 'buyin_notes', type: 'text', nullable: true})
  public buyinNotes!: string;

  @Column({name: 'game_token', type: 'text', nullable: false, default: ''})
  public gameToken!: string;

  @Column({name: 'seat_no', nullable: true})
  public seatNo!: number;

  @Column({name: 'no_of_buyins', default: 0})
  public noOfBuyins!: number;

  @Column({name: 'hh_rank', nullable: true})
  public hhRank!: number;

  @Column({name: 'hh_hand_num', nullable: true})
  public hhHandNum!: number;

  @Column({name: 'session_time', default: 0})
  public sessionTime!: number;

  @Column({name: 'no_hands_played', default: 0})
  public noHandsPlayed!: number;

  @Column({name: 'no_hands_won', default: 0})
  public noHandsWon!: number;

  @Column({name: 'rake_paid', type: 'decimal', default: 0})
  public rakePaid!: number;

  @Column({name: 'big_win', type: 'decimal', default: 0})
  public bigWin!: number;

  @Column({name: 'big_win_hand', type: 'int', default: 0})
  public bigWinHand!: number;

  @Column({name: 'big_loss', type: 'decimal', default: 0})
  public bigLoss!: number;

  @Column({name: 'big_loss_hand', type: 'int', default: 0})
  public bigLossHand!: number;

  @DbAwareColumn({name: 'hand_stack', type: 'text', nullable: true})
  public handStack!: string;

  @DbAwareColumn({
    name: 'seat_change_requested_at',
    type: 'timestamp',
    nullable: true,
    default: null,
  })
  public seatChangeRequestedAt!: Date | null;

  @DbAwareColumn({
    name: 'sat_at',
    type: 'timestamp',
    nullable: true,
  })
  public satAt!: Date;

  @DbAwareColumn({
    name: 'break_time_at',
    type: 'timestamp',
    nullable: true,
    default: null,
  })
  public breakTimeAt!: Date;

  @DbAwareColumn({
    name: 'waiting_from',
    type: 'timestamp',
    nullable: true,
  })
  public waitingFrom!: Date | null;

  @Column({name: 'waitlist_num', type: 'int', default: 0})
  public waitlistNum!: number;

  // this user is notified to take a seat and the time will expire at this time
  @DbAwareColumn({
    name: 'waitlist_sitting_exp',
    type: 'timestamp',
    nullable: true,
  })
  public waitingListTimeExp!: Date | null;
}

@Entity({name: 'player_game_stats'})
export class PlayerGameStats {
  @ManyToOne(() => PokerGame, game => game.id, {primary: true})
  @JoinColumn({name: 'pgs_game_id'})
  public game!: PokerGame;

  @ManyToOne(() => Player, player => player.id, {primary: true, eager: false})
  @JoinColumn({name: 'pgs_player_id'})
  public player!: Player;

  @Column({name: 'in_preflop', default: 0})
  public inPreflop!: number;

  @Column({name: 'in_flop', default: 0})
  public inFlop!: number;

  @Column({name: 'in_turn', default: 0})
  public inTurn!: number;

  @Column({name: 'in_river', default: 0})
  public inRiver!: number;

  @Column({name: 'went_to_showdown', default: 0})
  public wentToShowDown!: number;

  @Column({name: 'won_at_showdown', default: 0})
  public wentAtShowDown!: number;

  @Column({name: 'headsup_hands', default: 0})
  public headsupHands!: number;

  @Column({name: 'won_headsup_hands', default: 0})
  public wonHeadsupHands!: number;

  @Column({name: 'headsup_hand_details', type: 'text', default: '[]'}) // json array of heads up hand numbers [{handNum: 11, otherPlayer: "id", won: true/false}]
  public headsupHandDetails!: number;

  // betting stats
  @Column({name: 'preflop_raise', default: 0})
  public preflopRaise!: number;

  @Column({name: 'postflop_raise', default: 0})
  public postflopRaise!: number;

  @Column({name: 'three_bet', default: 0})
  public threeBet!: number;

  @Column({name: 'cont_bet', default: 0})
  public contBet!: number;

  @Column({name: 'vpip_count', default: 0})
  public vpipCount!: number;

  @Column({name: 'allin_count', default: 0})
  public allInCount!: number;
}

@Entity({name: 'club_chips_transaction'})
export class ClubChipsTransaction {
  @PrimaryGeneratedColumn()
  public id!: number;

  @ManyToOne(type => Club)
  @JoinColumn({name: 'club_id'})
  public club!: Club;

  @Column({name: 'description', type: 'text'})
  public description!: string;

  @Column({name: 'amount', type: 'decimal', precision: 8, scale: 2})
  public amount!: number;

  @Column({name: 'balance', type: 'decimal', precision: 8, scale: 2})
  public balance!: number;

  @DbAwareUpdateDateColumn({
    name: 'updated_at',
    type: 'timestamp',
    default: () => 'CURRENT_TIMESTAMP',
    onUpdate: 'CURRENT_TIMESTAMP',
  })
  public updatedAt!: Date;
}
